variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$DOCKER_TAG
  DOCKER_PULL_SECRET: docker-registry-secret
  K8S_NAMESPACE_PREFIX: biosamples
  # take from variable or read from kubectl
  K8S_CLUSTER_URL: http://hx-rke-wp-webadmin-17-worker-1.caas.ebi.ac.uk
  APP_NAME: $CI_PROJECT_NAME

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - dist/

stages:
  - build
#  - publish
  - deploy

build_docker_image:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u "$CI_DEPLOY_USER" -p "$CI_DEPLOY_PASSWORD" "$CI_REGISTRY"
    - echo $DOCKER_IMAGE_NAME
    - docker build -t $DOCKER_IMAGE_NAME .
    - docker push --quiet $DOCKER_IMAGE_NAME
  after_script:
    - docker logout ${CI_REGISTRY}

deploy_dev:
  variables:
    ENVIRONMENT_NAME: dev
    HOST: wwwint.ebi.ac.uk
  environment:
    name: dev
    url: https://wwwint.ebi.ac.uk/biosamples/biosamples/checklist-editor
  when: manual
  extends: .kube_deploy_script

deploy_test:
  stage: deploy
  rules:
    - if: 1 == 1
      when: never
  script:
    - echo "not implemented"

link-cluster-url:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - K8S_NODE_PORT=$(kubectl get service -o=jsonpath='{.spec.ports[0].nodePort}' ${APP_NAME})
  environment:
    name: ${ENVIRONMENT_NAME}/last-cluster-deployment
    url: ${K8S_CLUSTER_URL}:${K8S_NODE_PORT}/biosamples/schema-store/api/v2

.kube_deploy_script:
  stage: deploy
  image: dtzar/helm-kubectl
  variables:
    K8S_NAMESPACE: ${K8S_NAMESPACE_PREFIX}-${ENVIRONMENT_NAME}
  script:
    - kubectl create namespace ${K8S_NAMESPACE} || true
    - kubectl config set-context --current --namespace=${K8S_NAMESPACE}
    - kubectl delete secret $DOCKER_PULL_SECRET || true
    - kubectl create secret docker-registry $DOCKER_PULL_SECRET --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD
    - envsubst < k8s/deployment.yaml > k8s/kubernetes.yaml
    - envsubst < k8s/ingress_template.yaml > k8s/ingress.yaml
    - kubectl apply -f k8s/
    - kubectl rollout restart deployments checklist-editor

